@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using FrontEnd.Services
@using Microsoft.AspNetCore.SignalR.Client
@using NetcodeHub.Packages.Extensions.LocalStorage
@inject BroadcastService broadcastService
@inject NavigationManager NavManager
@inject ILocalStorageService localStorageService

<AuthorizeView>
    <Authorized>
        <h1>Hello, you are authorized!</h1>
    </Authorized>
    <NotAuthorized>
        <h1>Hello, you are not authorized!</h1>
    </NotAuthorized>
</AuthorizeView>

<p>@Message</p>

@code {
    [CascadingParameter] public Task<AuthenticationState> AuthState {get; set;}
    string Message = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        var user = (await AuthState!).User;
        if (!user.Identity!.IsAuthenticated)
        {
            NavManager.NavigateTo("/login");
            return;
        }
        try 
        {
            if (broadcastService.hubConnection!.State != HubConnectionState.Connected)
                await broadcastService.InitializeAsync("http://localhost:5208/broadcast");   
        }
        catch
        {
            await broadcastService.InitializeAsync("http://localhost:5208/broadcast");
        }
        broadcastService.SubscribeMessageHandler((message) => 
        {
            Message += $", {message}";
            InvokeAsync(StateHasChanged);
        });
    }
}    
